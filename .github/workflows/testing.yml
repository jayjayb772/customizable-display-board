name: Testing
on: [push]
jobs:
  phpunit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Prepare Environment
        run: cp .env.ci .env.testing
      - name: Create Database
        run: |
          sudo systemctl start mysql
          mysql --user="root" --password="root" -e "CREATE DATABASE display_testing character set UTF8mb4 collate utf8mb4_bin;"
      - name: Install Composer (& NPM) Dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader
      - name: Generate Application Key
        run: php artisan key:generate --env=testing
      - name: Run Migrations
        run: php artisan migrate --env=testing
      - name: Generate Assets
        run: npm run production
      - name: Run Tests
        run: php artisan test
  laravel-dusk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Prepare Environment
        run: cp .env.ci .env.testing
      - name: Create Database
        run: |
          sudo systemctl start mysql
          mysql --user="root" --password="root" -e "CREATE DATABASE display_testing character set UTF8mb4 collate utf8mb4_bin;"
      - name: Install Composer (& NPM) Dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader
      - name: Generate Application Key
        run: php artisan key:generate --env=testing
      - name: Run Migrations
        run: php artisan migrate --env=testing
      - name: Generate Assets
        run: npm run production
      - name: Run Mailhog docker container
        run: docker run -d -p 8025:8025 -p 1025:1025 mailhog/mailhog
      - name: Upgrade Chrome Driver
        run: php artisan dusk:chrome-driver `/opt/google/chrome/chrome --version | cut -d " " -f3 | cut -d "." -f1`
      - name: Start Chrome Driver
        run: ./vendor/laravel/dusk/bin/chromedriver-linux &
      - name: Run Laravel Server
        run: php artisan serve --no-reload --env=testing &
      - name: Generate Assets
        run: npm run production
      - name: Run Tests
        run: php artisan dusk --env=testing
      - name: Upload Screenshots
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: screenshots
          path: tests/Browser/screenshots
      - name: Upload Console Logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: console
          path: tests/Browser/console
  jest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install NPM Dependencies
        run: npm ci
      - name: Run Tests
        run: npm run test
